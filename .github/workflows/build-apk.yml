name: Build Flutter APK and App Bundle

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.0.1, etc.
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  attestations: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.3'
        channel: 'stable'
        cache: true

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          app/android/.gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('app/android/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('app/android/**/build.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Cache Pub dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          app/.dart_tool
        key: ${{ runner.os }}-pub-${{ hashFiles('app/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-

    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r27c
        add-to-path: false
        local-cache: true

    - name: Get Flutter dependencies
      working-directory: ./app
      run: flutter pub get

    - name: Analyze Flutter code
      working-directory: ./app
      run: flutter analyze

    - name: Run Flutter tests with coverage
      working-directory: ./app
      run: flutter test --coverage

    - name: Build Debug APK
      working-directory: ./app
      run: flutter build apk --debug --target-platform android-arm64

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: app/build/app/outputs/flutter-apk/app-debug.apk
        retention-days: 7

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v6
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.3'
        channel: 'stable'
        cache: true

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          app/android/.gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('app/android/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('app/android/**/build.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Cache Pub dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          app/.dart_tool
        key: ${{ runner.os }}-pub-${{ hashFiles('app/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-

    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r27c
        add-to-path: false
        local-cache: true

    - name: Setup Release Keystore
      run: |
        # Decode base64 keystore and save it in runner temp directory
        echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > ${{ runner.temp }}/keystore.jks

        # Create key.properties file for release signing
        cat > app/android/key.properties << EOF
        storePassword=${{ secrets.KEYSTORE_PASSWORD }}
        keyPassword=${{ secrets.KEY_PASSWORD }}
        keyAlias=${{ secrets.KEY_ALIAS }}
        storeFile=${{ runner.temp }}/keystore.jks
        EOF

    - name: Get Flutter dependencies
      working-directory: ./app
      run: flutter pub get

    - name: Build Release APK
      working-directory: ./app
      run: flutter build apk --release --split-per-abi --obfuscate --split-debug-info=build/app/outputs/symbols

    - name: Build Release App Bundle
      working-directory: ./app
      run: flutter build appbundle --release --obfuscate --split-debug-info=build/app/outputs/symbols

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v3
      with:
        subject-name: 'com.cboxlab.baskit'
        subject-path: 'app/build/app/outputs/bundle/release/app-release.aab , app/build/app/outputs/flutter-apk/app-*-release.apk'

    - name: Upload Release APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apks
        path: app/build/app/outputs/flutter-apk/app-*-release.apk
        retention-days: 30

    - name: Upload Release App Bundle as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release-aab
        path: app/build/app/outputs/bundle/release/app-release.aab
        retention-days: 30

    - name: Upload Debug Symbols as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: debug-symbols
        path: app/build/app/outputs/symbols/
        retention-days: 30

    - name: Package Debug Symbols
      working-directory: ./app
      run: |
        cd build/app/outputs/symbols
        zip -r ../../../../debug-symbols.zip .
        cd ../../../../

    - name: Clean up keystore files
      if: always()
      run: |
        rm -f ${{ runner.temp }}/keystore.jks
        rm -f app/android/key.properties

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: |
          app/build/app/outputs/flutter-apk/app-*-release.apk
          app/build/app/outputs/bundle/release/app-release.aab
          app/debug-symbols.zip
        name: Baskit ${{ github.ref_name }}
        body: |
          ## ðŸ“± Downloads
          - **APK**: Direct install (choose `app-arm64-v8a-release.apk` for most devices)
          - **App Bundle**: Google Play Store ready (`app-release.aab`)
          - **Debug Symbols**: Crash reporting (`debug-symbols.zip`)

          **Build**: Flutter 3.29.3, Release signed, Obfuscated | **Commit**: ${{ github.sha }}
        generateReleaseNotes: true
