rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only access their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // User-specific lists - users can access their own lists
      match /lists/{listId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // Items within user lists
        match /items/{itemId} {
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }
      }
    }
    
    // Shared lists - only members can access
    match /shared_lists/{listId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.members;
      
      // Items in shared lists
      match /items/{itemId} {
        allow read, write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/shared_lists/$(listId)).data.members;
      }
    }
    
    // Invitations - users can read invitations sent to them
    match /invitations/{invitationId} {
      allow read: if request.auth != null && 
        (request.auth.token.email == resource.data.email || 
         request.auth.uid == resource.data.invitedBy);
      allow write: if request.auth != null && request.auth.uid == resource.data.invitedBy;
      allow update: if request.auth != null && request.auth.token.email == resource.data.email;
    }
  }
} 